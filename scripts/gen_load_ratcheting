#! /usr/bin/env python3


import sys
from time import sleep

from jsonpickle import json
from ledger.stores.text_file_store import TextFileStore
from plenum.client.signer import SimpleSigner
from plenum.common.looper import Looper
from plenum.common.txn import TARGET_NYM, TXN_TYPE, NYM, ROLE, USER, NEW_NODE, DATA, ALIAS, CLIENT_IP, CLIENT_PORT
from plenum.common.types import HA, CLIENT_STACK_SUFFIX

from sovrin.client.client import Client

from sovrin.common.util import getConfig

# First argument = How many request needs to be submitted in certain duration (default 1 day)
# Second argument = By what percent, daily request count should be increased (default is 50%)
# Third argument = Signer seed for client (default is FCU's signer seed)


if len(sys.argv) == 2:
    perDayCount = int(sys.argv[1])
else:
    perDayCount = 16

if len(sys.argv) == 3:
    dailyIncreasePer = int(sys.argv[2])
else:
    dailyIncreasePer = 50

if len(sys.argv) == 4:
    signerSeed = sys.argv[3]
else:
    signerSeed = "Alpha111111111111111111111111111"  # "FCU11111111111111111111111111111"


oneDaySeconds = 120

print("perDayCount: {}".format(perDayCount))
print("dailyIncreasePercentage: {}".format(dailyIncreasePer))

config = getConfig()


ledger = TextFileStore(dbDir=config.baseDir, dbName=config.poolTransactionsFile, isLineNoKey=True)
stewardIdentifier = None
cliNodeReg = {}

for seqNo, txn in ledger.iterator():
    txn = json.loads(txn)
    if txn[TXN_TYPE] == NEW_NODE:
            data = txn[DATA]
            cliNodeReg[data[ALIAS] + CLIENT_STACK_SUFFIX] = HA(data[CLIENT_IP],
                                                               data[CLIENT_PORT])
print(cliNodeReg)

with Looper(debug=True) as looper:
    # clientName = "load-generator-client"
    # sponsorSigner = SimpleSigner(seed=signerSeed)
    # # create client with sponsor signer
    # clientAddress = HA(host='0.0.0.0', port=5678)
    # client = Client(clientName,
    #                 nodeReg=cliNodeReg,
    #                 ha=clientAddress,
    #                 signer=sponsorSigner,
    #                 basedirpath=config.baseDir)
    # looper.add(client)

    i = 0
    while i < perDayCount:
        # nym = SimpleSigner().verstr
        # op = {
        #     TARGET_NYM: nym,
        #     TXN_TYPE: NYM,
        #     ROLE: USER
        # }
        # client.submit(op, identifier=client.defaultIdentifier)
        sleepTime = oneDaySeconds / perDayCount
        print("\nIteration {}".format(i))
        print("  Will stop for {} seconds".format(sleepTime))
        sleep(sleepTime)
        i += 1
        if i == perDayCount:
            print("  request for one day is finished, now resetting".format(i))
            i = 0
            perDayCount = int(perDayCount + (perDayCount*dailyIncreasePer/100))
            print("  new I = {}, perDayCount = {}".format(i, perDayCount))
